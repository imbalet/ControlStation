// // #ifdef ESP8266
// // #include <ESP8266WiFi.h>
// // #endif

// // #ifdef ESP32
// // #include <WiFi.h>
// // #endif

// // #include "ESP8266WebServer.h"
// // #include "Adafruit_GFX.h"
// // #include "Adafruit_SSD1306.h"
// // #include "WebSocketsServer.h"
// // #include <FastLED.h>
// // #include "html.h"

// // #define NUM_LEDS 256
// // #define DATA_PIN 4
// // #define FRAMES 7
// // const CRGB num1[NUM_LEDS] = PROGMEM {0,0,0,0,0,0,11285042,11285042,11285042,11285042,11285042,0,0,0,0,0,0,0,0,0,11285042,11285042,11285042,11285042,11285042,11285042,0,0,0,0,0,0,0,0,0,0,0,0,11285042,11285042,11285042,11285042,11285042,11285042,11285042,0,0,0,0,0,0,14643494,14643494,14643494,0,14643494,14643494,14643494,0,0,0,0,0,0,0,0,0,0,0,0,14643494,14643494,14643494,0,0,14643494,14643494,14643494,0,0,0,0,0,0,0,0,0,14643494,14643494,14643494,0,0,0,0,0,0,0,0,0,0,0,0,16511542,16511542,16511542,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16511542,16511542,16511542,0,0,0,0,0,0,0,0,0,0,0,0,16511542,16511542,16511542,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16511542,16511542,16511542,0,0,0,0,0,0,0,0,0,0,0,0,10085712,10085712,10085712,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10085712,10085712,10085712,0,0,0,0,0,0,0,0,0,0,0,0,10085712,10085712,10085712,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5992161,5992161,5992161,0,0,0,0,0,0,0,0,0,0,0,0,5992161,5992161,5992161,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3170434,3170434,3170434,0,0,0,0,0,0};
// // const CRGB num2[NUM_LEDS] = PROGMEM {0,0,0,0,11285042,11285042,11285042,11285042,11285042,11285042,11285042,11285042,11285042,0,0,0,0,0,0,11285042,11285042,11285042,11285042,11285042,11285042,11285042,11285042,11285042,0,0,0,0,0,0,0,0,11285042,11285042,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14643494,14643494,0,0,0,0,0,0,0,0,14643494,14643494,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14643494,14643494,0,0,0,0,0,0,0,0,16511542,16511542,0,0,0,0,0,0,0,0,0,0,0,0,0,16511542,16511542,16511542,16511542,16511542,16511542,16511542,16511542,16511542,0,0,0,0,0,0,0,0,16511542,16511542,16511542,16511542,16511542,16511542,16511542,16511542,16511542,0,0,0,0,0,0,16511542,16511542,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10085712,10085712,0,0,0,0,0,0,10085712,10085712,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10085712,10085712,0,0,0,0,0,0,5992161,5992161,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5992161,5992161,5992161,5992161,5992161,5992161,5992161,5992161,5992161,0,0,0,0,0,0,3170434,3170434,3170434,3170434,3170434,3170434,3170434,3170434,3170434,0,0,0,0};
// // const CRGB num3[NUM_LEDS] = PROGMEM {0,0,0,0,11285042,11285042,11285042,11285042,11285042,11285042,11285042,11285042,11285042,0,0,0,0,0,0,11285042,11285042,11285042,11285042,11285042,11285042,11285042,11285042,11285042,0,0,0,0,0,0,0,0,11285042,11285042,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14643494,14643494,0,0,0,0,0,0,0,0,14643494,14643494,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14643494,14643494,0,0,0,0,0,0,0,0,16511542,16511542,0,0,0,0,0,0,0,0,0,0,0,0,0,16511542,16511542,16511542,16511542,16511542,16511542,16511542,16511542,16511542,0,0,0,0,0,0,0,0,16511542,16511542,16511542,16511542,16511542,16511542,16511542,16511542,16511542,0,0,0,0,0,0,0,0,0,0,0,0,0,16511542,16511542,0,0,0,0,0,0,0,0,6995504,6995504,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6995504,6995504,0,0,0,0,0,0,0,0,6995504,6995504,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5992161,5992161,0,0,0,0,0,0,0,0,5992161,5992161,5992161,5992161,5992161,5992161,5992161,5992161,5992161,0,0,0,0,0,0,3170434,3170434,3170434,3170434,3170434,3170434,3170434,3170434,3170434,0,0,0,0};

// // const CRGB leds[NUM_LEDS] = PROGMEM {};

// // const CRGB cat[NUM_LEDS] = PROGMEM {16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,0,16777215,16777215,16777215,16777215,16777215,0,16777215,0,13069358,0,16777215,16777215,16777215,0,13069358,0,16777215,16777215,0,0,16777215,16777215,16777215,16777215,16777215,0,16777215,16777215,0,16777215,0,13069358,13069358,0,0,0,13069358,13069358,0,0,13069358,13069358,13069358,13069358,13069358,13069358,13069358,0,16777215,0,16777215,13069358,13069358,0,16777215,16777215,0,13069358,13069358,0,16777215,16777215,0,10767377,0,13069358,13069358,13069358,0,10767377,0,0,13069358,13069358,13069358,13069358,13069358,13069358,13069358,0,16777215,16777215,16777215,0,10767377,0,16777215,16777215,0,13069358,0,16777215,16777215,16777215,0,13069358,13069358,13069358,16777215,16777215,13069358,13069358,0,16777215,0,16777215,16777215,16777215,16777215,13069358,0,0,16777215,16777215,16777215,0,10767377,0,16777215,16777215,0,13069358,0,16777215,16777215,0,13069358,13069358,10767377,10767377,10767377,10767377,0,16777215,16777215,16777215,16777215,0,13069358,10767377,10767377,13069358,10767377,13069358,10767377,0,0,13069358,10767377,0,16777215,16777215,16777215,0,13069358,13069358,0,13069358,10767377,13069358,10767377,13069358,13069358,13069358,0,16777215,16777215,16777215,16777215,0,13069358,13069358,13069358,13069358,10767377,13069358,10767377,0,0,0,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,0,13069358,13069358,13069358,13069358,13069358,13069358,13069358,0,16777215,16777215,16777215,16777215,0,13069358,0,13069358,13069358,0,13069358,13069358,0,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,0,16777215,16777215,0,16777215,16777215,0,16777215,0,16777215,16777215,16777215,16777215,0,0,0,0,0,0,0,0,0,16777215,16777215,16777215,16777215,16777215};
// // // const CRGB leds[FRAMES][NUM_LEDS] = PROGMEM {
// // //   {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
// // //   {16711680,16711680,16711680,16711680,0,0,0,0,0,0,0,0,0,0,0,0,16711680,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16711680,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16711680,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16711680,16711680,16711680,16711680,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
// // //   {},
// // //   {},
// // //   {16711680,16711680,16711680,16711680,0,16711680,16711680,16711680,16711680,16711680,0,16711680,16711680,16711680,16711680,0,16711680,0,0,0,0,16711680,0,0,0,16711680,0,16711680,0,0,0,0,16711680,0,0,0,0,16711680,0,0,0,16711680,0,16711680,0,0,0,0,16711680,0,0,0,0,16711680,0,0,0,16711680,0,16711680,0,0,0,0,16711680,16711680,16711680,16711680,0,16711680,16711680,16711680,16711680,16711680,0,16711680,16711680,16711680,16711680,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16711680,16711680,0,0,0,0,0,0,0,0,0,0,0,0,0,16711680,0,0,16711680,0,0,0,0,0,0,0,0,0,0,0,0,16711680,0,0,16711680,0,0,0,0,0,0,0,0,0,0,0,0,16711680,16711680,16711680,16711680,0,0,0,0,0,0,0,0,0,0,0,0,16711680,0,0,16711680,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
// // //   {16711680,16711680,16711680,16711680,0,16711680,16711680,16711680,16711680,16711680,0,16711680,16711680,16711680,16711680,0,16711680,0,0,0,0,16711680,0,0,0,16711680,0,16711680,0,0,0,0,16711680,0,0,0,0,16711680,0,0,0,16711680,0,16711680,0,0,0,0,16711680,0,0,0,0,16711680,0,0,0,16711680,0,16711680,0,0,0,0,16711680,16711680,16711680,16711680,0,16711680,16711680,16711680,16711680,16711680,0,16711680,16711680,16711680,16711680,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16711680,16711680,0,0,16711680,16711680,16711680,16711680,16711680,0,0,0,0,0,0,16711680,0,0,16711680,0,0,0,16711680,0,0,0,0,0,0,0,0,16711680,0,0,16711680,0,0,0,16711680,0,0,0,0,0,0,0,0,16711680,16711680,16711680,16711680,0,0,0,16711680,0,0,0,0,0,0,0,0,16711680,0,0,16711680,0,0,0,16711680,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
// // //   {16711680,16711680,16711680,16711680,0,16711680,16711680,16711680,16711680,16711680,0,16711680,16711680,16711680,16711680,0,16711680,0,0,0,0,16711680,0,0,0,16711680,0,16711680,0,0,0,0,16711680,0,0,0,0,16711680,0,0,0,16711680,0,16711680,0,0,0,0,16711680,0,0,0,0,16711680,0,0,0,16711680,0,16711680,0,0,0,0,16711680,16711680,16711680,16711680,0,16711680,16711680,16711680,16711680,16711680,0,16711680,16711680,16711680,16711680,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16711680,16711680,0,0,16711680,16711680,16711680,16711680,16711680,0,16711680,0,0,0,0,16711680,0,0,16711680,0,0,0,16711680,0,0,0,16711680,0,0,0,0,16711680,0,0,16711680,0,0,0,16711680,0,0,0,16711680,16711680,16711680,0,0,16711680,16711680,16711680,16711680,0,0,0,16711680,0,0,0,16711680,0,16711680,0,0,16711680,0,0,16711680,0,0,0,16711680,0,0,0,16711680,16711680,16711680,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
// // // };


// // #define STA 1 // 1 for STA, 0 - AP

// // const char *ap_ssid = "ROBOT";
// // const char *ap_password = "12345678";

// // #define SCREEN_ADDRESS 0x3C
// // Adafruit_SSD1306 display(128, 64, &Wire, -1);

// // const char *ssid = "wintest";
// // const char *password = "12345678";

// // #define DEF_PAD_DATA "%080/0a256255255255/0b000000000000000000/1a255255255255/1b000000000000000000/097/"
// // #define UART_TIMEOUT 500

// // ESP8266WebServer server(80);
// // WebSocketsServer webSocket = WebSocketsServer(81);

// // String msg = "";

// // bool connected = 0;
// // uint32_t timer = 0;

// // void webSocketEvent(uint8_t num, WStype_t type, uint8_t *payload, size_t length)
// // {
// //   switch (type)
// //   {
// //   case WStype_DISCONNECTED:
// //     connected = 0;
// //     // Serial.println("Disconnected");
// //     break;
// //   case WStype_CONNECTED:
// //   {
// //     connected = 1;
// //     IPAddress ip = webSocket.remoteIP(num);
// //     webSocket.sendTXT(num, "Connected");
// //   }
// //   break;
// //   case WStype_TEXT:
// //     timer = millis();
// //     msg = ((String)((char *)payload)).substring(1);
// //     if ((char)payload[0] == '1')
// //     {
// //       webSocket.sendTXT(num, "got");
// //     }
// //     break;
// //   case WStype_BIN:
// //     // Serial.println("Binary");
// //     break;
// //   }
// // }

// // void handleRoot()
// // {
// //   server.send(200, "text/html", index_html);
// // }
// // uint32_t mosfet_timer = 0;
// // uint8_t frame_ptr = 0;
// // //CRGB *leds_frame = const_cast<CRGB*>(leds);
// // void setup()
// // {
// //   Serial.begin(115200, SERIAL_8N1);
// //   // for (int i=0; i < NUM_LEDS; i++){
// //   //   uint32_t ledColor=pgm_read_dword(&(RCR[i]));
// //   //   leds[i]=ledColor;
// //   //   Serial.println(ledColor);
// //   // }



// //   FastLED.addLeds<WS2812B, DATA_PIN, GRB>(const_cast<CRGB*>(cat), NUM_LEDS);
// //   FastLED.setBrightness(100);//0-255
// //   FastLED.show();


// //   pinMode(2, OUTPUT);
// //   digitalWrite(2, 0);
  
// //   display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS);

// //   display.clearDisplay();
// //   display.setTextSize(1);
// //   display.setTextColor(SSD1306_WHITE);
// //   display.setCursor(0,0);
// //   display.println("No connection((");
// //   display.display();

// //   #if STA

// //   WiFi.begin(ssid, password);

// //   display.clearDisplay();
// //   display.setTextSize(1);
// //   display.setTextColor(SSD1306_WHITE);
// //   display.setCursor(0,0);
// //   display.println("Connecting.......");
// //   display.display();

// //     while (WiFi.status() != WL_CONNECTED)
// //   {
// //     delay(1000);
// //     display.setCursor(0,1);
// //     display.print(millis());
// //     display.display();
// //   }
// //   #else
  
// //   WiFi.softAP(ap_ssid, ap_password);
  
// //   #endif

// //   webSocket.begin();
// //   webSocket.onEvent(webSocketEvent);
// //   // Serial.begin(115200, SERIAL_8N1);

// //   Serial.println(WiFi.localIP());

// //   server.on("/", handleRoot);
// //   server.begin();

// //   display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS);

// //   display.clearDisplay();

// //   display.setTextSize(1);
// //   display.setTextColor(SSD1306_WHITE);
// //   display.setCursor(0,0);
// //   display.println(WiFi.localIP());
// //   display.println((WiFi.softAPIP()));
// //   display.display();
// //   mosfet_timer = millis();

// // }

// // uint32_t send_timer = 0;
// // uint32_t frame_timer = 0;

// // uint8_t position = 0;
// // bool ledState = 0;
// // void loop()
// // {
// //   //Serial.println(WiFi.localIP());
// //     // if( Serial.available() ){
// //     //     position = Serial.read(); // считываем один байт из UART
// //     //     digitalWrite( 2, ledState ); // включаем/выключаем светодиод
// //     //     ledState = !ledState; // меняем значение ledState
// //     //     switch(position){
// //     //       case 1:
// //     //         FastLED.addLeds<WS2812B, DATA_PIN, GRB>(const_cast<CRGB*>(num1), NUM_LEDS);
// //     //         FastLED.setBrightness(100);//0-255
// //     //         FastLED.show();
// //     //         break;
// //     //       case 2:
// //     //         FastLED.addLeds<WS2812B, DATA_PIN, GRB>(const_cast<CRGB*>(num2), NUM_LEDS);
// //     //         FastLED.setBrightness(100);//0-255
// //     //         FastLED.show();
// //     //         break;
// //     //       case 3:
// //     //         FastLED.addLeds<WS2812B, DATA_PIN, GRB>(const_cast<CRGB*>(num3), NUM_LEDS);
// //     //         FastLED.setBrightness(100);//0-255
// //     //         FastLED.show();
// //     //         break;
// //     //     }
        
// //     //     //Serial.println(position);
// //     //     //Serial.print('\r');
// //     // }



// //   // if ((millis() - frame_timer) >= 500){
// //   //   frame_timer = millis();
// //   //   // if (frame_ptr < FRAMES){
// //   //   //   frame_ptr ++;
// //   //   // }
// //   //   // if (frame_ptr == FRAMES){
// //   //   //   frame_ptr = 0;
// //   //   // }
// //   //   // FastLED.addLeds<WS2812B, DATA_PIN, GRB>(const_cast<CRGB*>(leds[frame_ptr]), NUM_LEDS);
// //   //   // //leds_frame = const_cast<CRGB*>(&(leds[frame_ptr][0]));
// //   //   // FastLED.show();
// //   //   //Serial.println(frame_ptr);
// //   // }


// //   if (millis() - mosfet_timer >= 5000){
// //     digitalWrite(2, 1);
// //   }
// //   server.handleClient();
// //   webSocket.loop();

// //   yield();
// //   if (millis() - send_timer >= 50)
// //   {
// //     if (millis() - timer >= UART_TIMEOUT)
// //     {
// //       Serial.print(DEF_PAD_DATA);
// //       Serial.print('\r');
// //     }
// //     else
// //     {
// //       Serial.print(msg);
// //       Serial.print('\r');
// //     }
// //     send_timer = millis();
// //   }
// // }


// #ifdef ESP8266
// #include <ESP8266WiFi.h>
// #endif

// #ifdef ESP32
// #include <WiFi.h>
// #endif

// #include "ESP8266WebServer.h"
// #include "Adafruit_GFX.h"
// #include "Adafruit_SSD1306.h"
// #include "WebSocketsServer.h"
// #include <FastLED.h>

// #include "html.h"


// #define NUM_LEDS 256
// #define DATA_PIN 4

// const CRGB num1[NUM_LEDS] PROGMEM = {0,0,0,0,0,0,11285042,11285042,11285042,11285042,11285042,0,0,0,0,0,0,0,0,0,11285042,11285042,11285042,11285042,11285042,11285042,0,0,0,0,0,0,0,0,0,0,0,0,11285042,11285042,11285042,11285042,11285042,11285042,11285042,0,0,0,0,0,0,14643494,14643494,14643494,0,14643494,14643494,14643494,0,0,0,0,0,0,0,0,0,0,0,0,14643494,14643494,14643494,0,0,14643494,14643494,14643494,0,0,0,0,0,0,0,0,0,14643494,14643494,14643494,0,0,0,0,0,0,0,0,0,0,0,0,16511542,16511542,16511542,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16511542,16511542,16511542,0,0,0,0,0,0,0,0,0,0,0,0,16511542,16511542,16511542,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16511542,16511542,16511542,0,0,0,0,0,0,0,0,0,0,0,0,10085712,10085712,10085712,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10085712,10085712,10085712,0,0,0,0,0,0,0,0,0,0,0,0,10085712,10085712,10085712,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5992161,5992161,5992161,0,0,0,0,0,0,0,0,0,0,0,0,5992161,5992161,5992161,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3170434,3170434,3170434,0,0,0,0,0,0};
// const CRGB num2[NUM_LEDS] PROGMEM = {0,0,0,0,11285042,11285042,11285042,11285042,11285042,11285042,11285042,11285042,11285042,0,0,0,0,0,0,11285042,11285042,11285042,11285042,11285042,11285042,11285042,11285042,11285042,0,0,0,0,0,0,0,0,11285042,11285042,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14643494,14643494,0,0,0,0,0,0,0,0,14643494,14643494,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14643494,14643494,0,0,0,0,0,0,0,0,16511542,16511542,0,0,0,0,0,0,0,0,0,0,0,0,0,16511542,16511542,16511542,16511542,16511542,16511542,16511542,16511542,16511542,0,0,0,0,0,0,0,0,16511542,16511542,16511542,16511542,16511542,16511542,16511542,16511542,16511542,0,0,0,0,0,0,16511542,16511542,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10085712,10085712,0,0,0,0,0,0,10085712,10085712,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10085712,10085712,0,0,0,0,0,0,5992161,5992161,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5992161,5992161,5992161,5992161,5992161,5992161,5992161,5992161,5992161,0,0,0,0,0,0,3170434,3170434,3170434,3170434,3170434,3170434,3170434,3170434,3170434,0,0,0,0};
// const CRGB num3[NUM_LEDS] PROGMEM = {0,0,0,0,11285042,11285042,11285042,11285042,11285042,11285042,11285042,11285042,11285042,0,0,0,0,0,0,11285042,11285042,11285042,11285042,11285042,11285042,11285042,11285042,11285042,0,0,0,0,0,0,0,0,11285042,11285042,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14643494,14643494,0,0,0,0,0,0,0,0,14643494,14643494,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14643494,14643494,0,0,0,0,0,0,0,0,16511542,16511542,0,0,0,0,0,0,0,0,0,0,0,0,0,16511542,16511542,16511542,16511542,16511542,16511542,16511542,16511542,16511542,0,0,0,0,0,0,0,0,16511542,16511542,16511542,16511542,16511542,16511542,16511542,16511542,16511542,0,0,0,0,0,0,0,0,0,0,0,0,0,16511542,16511542,0,0,0,0,0,0,0,0,6995504,6995504,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6995504,6995504,0,0,0,0,0,0,0,0,6995504,6995504,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5992161,5992161,0,0,0,0,0,0,0,0,5992161,5992161,5992161,5992161,5992161,5992161,5992161,5992161,5992161,0,0,0,0,0,0,3170434,3170434,3170434,3170434,3170434,3170434,3170434,3170434,3170434,0,0,0,0};

// const CRGB leds[NUM_LEDS] PROGMEM = {};

// const CRGB cat[NUM_LEDS] PROGMEM = {16777215,16777215,0,0,0,0,0,0,0,0,0,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,0,16777215,16777215,0,16777215,16777215,0,16777215,0,16777215,16777215,16777215,16777215,0,13069358,0,13069358,13069358,0,13069358,13069358,0,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,0,13069358,13069358,13069358,13069358,13069358,13069358,13069358,0,16777215,16777215,16777215,16777215,0,13069358,13069358,13069358,13069358,10767377,13069358,10767377,0,0,0,16777215,16777215,16777215,16777215,16777215,0,13069358,13069358,0,13069358,10767377,13069358,10767377,13069358,13069358,13069358,0,16777215,16777215,16777215,16777215,0,13069358,10767377,10767377,13069358,10767377,13069358,10767377,0,0,13069358,10767377,0,16777215,16777215,0,13069358,0,16777215,16777215,0,13069358,13069358,10767377,10767377,10767377,10767377,0,16777215,16777215,16777215,0,16777215,16777215,16777215,16777215,13069358,0,0,16777215,16777215,16777215,0,10767377,0,16777215,16777215,0,13069358,0,16777215,16777215,16777215,0,13069358,13069358,13069358,16777215,16777215,13069358,13069358,0,0,13069358,13069358,13069358,13069358,13069358,13069358,13069358,0,16777215,16777215,16777215,0,10767377,0,16777215,16777215,0,13069358,13069358,0,16777215,16777215,0,10767377,0,13069358,13069358,13069358,0,10767377,0,0,13069358,13069358,13069358,13069358,13069358,13069358,13069358,0,16777215,0,16777215,13069358,13069358,0,16777215,16777215,16777215,0,16777215,16777215,0,16777215,0,13069358,13069358,0,0,0,13069358,13069358,0,0,13069358,0,16777215,16777215,16777215,0,13069358,0,16777215,16777215,0,0,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,0,16777215,16777215,16777215,16777215,16777215,0,16777215};





// #define STA 1 // 1 for STA, 0 - AP

// const char *ap_ssid = "ROBOT";
// const char *ap_password = "12345678";

// #define SCREEN_ADDRESS 0x3C
// Adafruit_SSD1306 display(128, 64, &Wire, -1);

// const char *ssid = "wintest1";
// const char *password = "12345678";

// #define DEF_PAD_DATA "%080/0a256255255255/0b000000000000000000/1a255255255255/1b000000000000000000/097/"
// #define UART_TIMEOUT 500

// ESP8266WebServer server(80);
// WebSocketsServer webSocket = WebSocketsServer(81);

// String msg = "";

// bool connected = 0;
// uint32_t timer = 0;

// void webSocketEvent(uint8_t num, WStype_t type, uint8_t *payload, size_t length)
// {
//   switch (type)
//   {
//   case WStype_DISCONNECTED:
//     connected = 0;
//     // Serial.println("Disconnected");
//     break;
//   case WStype_CONNECTED:
//   {
//     connected = 1;
//     IPAddress ip = webSocket.remoteIP(num);
//     webSocket.sendTXT(num, "Connected");
//   }
//   break;
//   case WStype_TEXT:
//     timer = millis();
//     msg = ((String)((char *)payload)).substring(1);
//     if ((char)payload[0] == '1')
//     {
//       webSocket.sendTXT(num, "got");
//     }
//     break;
//   case WStype_BIN:
//     // Serial.println("Binary");
//     break;
//   }
// }

// void handleRoot()
// {
//   server.send(200, "text/html", index_html);
// }




// uint32_t mosfet_timer = 0;
// void setup()
// {
//   Serial.begin(115200, SERIAL_8N1);
//   pinMode(2, OUTPUT);
//   digitalWrite(2, 0);


//   // FastLED.addLeds<WS2812B, DATA_PIN, GRB>(const_cast<CRGB*>(leds), NUM_LEDS);
//   // FastLED.setBrightness(10);//0-255
//   // FastLED.show();
  
//   display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS);

//   display.clearDisplay();
//   display.setTextSize(1);
//   display.setTextColor(SSD1306_WHITE);
//   display.setCursor(0,0);
//   display.println("No connection((");
//   display.display();

//   #if STA

//   WiFi.begin(ssid, password);

//   display.clearDisplay();
//   display.setTextSize(1);
//   display.setTextColor(SSD1306_WHITE);
//   display.setCursor(0,0);
//   display.println("Connecting.......");
//   Serial.println("Connecting.......");
//   display.display();

//   while (WiFi.status() != WL_CONNECTED)
//   {
//     delay(1000);
//     display.setCursor(0,1);
//     display.print(millis());
//     display.display();
//     Serial.print('.');
//   }

//   #else
  
//   WiFi.softAP(ap_ssid, ap_password);
  
//   #endif

//   webSocket.begin();
//   webSocket.onEvent(webSocketEvent);
  

//   Serial.println(WiFi.localIP());

//   server.on("/", handleRoot);
//   server.begin();

//   display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS);

//   display.clearDisplay();

//   display.setTextSize(1);
//   display.setTextColor(SSD1306_WHITE);
//   display.setCursor(0,0);
//   display.println(WiFi.localIP());
//   display.println((WiFi.softAPIP()));
//   display.display();
//   mosfet_timer = millis();

// }

// uint32_t send_timer = 0;


// uint8_t position = 0;
// bool ledState = 0;

// void loop()
// {
//   if( Serial.available() ){
//       position = Serial.read(); // считываем один байт из UART
//       digitalWrite( 2, ledState ); // включаем/выключаем светодиод
//       ledState = !ledState; // меняем значение ledState
//       switch(position){
//         case 1:
//           FastLED.addLeds<WS2812B, DATA_PIN, GRB>(const_cast<CRGB*>(num1), NUM_LEDS);
//           FastLED.setBrightness(100);//0-255
//           FastLED.show();
//           break;
//         case 2:
//           FastLED.addLeds<WS2812B, DATA_PIN, GRB>(const_cast<CRGB*>(num2), NUM_LEDS);
//           FastLED.setBrightness(100);//0-255
//           FastLED.show();
//           break;
//         case 3:
//           FastLED.addLeds<WS2812B, DATA_PIN, GRB>(const_cast<CRGB*>(num3), NUM_LEDS);
//           FastLED.setBrightness(100);//0-255
//           FastLED.show();
//           break;
//       }
      
//       //Serial.println(position);
//       //Serial.print('\r');
//   }





//   if (millis() - mosfet_timer >= 5000){
//     digitalWrite(2, 1);
//   }
//   server.handleClient();
//   webSocket.loop();

//   yield();
//   if (millis() - send_timer >= 50)
//   {
//     if (millis() - timer >= UART_TIMEOUT)
//     {
//       Serial.print(DEF_PAD_DATA);
//       Serial.print('\r');
//     }
//     else
//     {
//       Serial.print(msg);
//       Serial.print('\r');
//     }
//     send_timer = millis();
//   }
// }





#ifdef ESP8266
#include <ESP8266WiFi.h>
#endif

#ifdef ESP32
#include <WiFi.h>
#endif

#include "ESP8266WebServer.h"
#include "Adafruit_GFX.h"
#include "Adafruit_SSD1306.h"
#include "WebSocketsServer.h"

#include <FastLED.h>


#define NUM_LEDS 256
#define DATA_PIN 4

const CRGB num1[NUM_LEDS] PROGMEM = {0,0,0,0,0,0,11285042,11285042,11285042,11285042,11285042,0,0,0,0,0,0,0,0,0,11285042,11285042,11285042,11285042,11285042,11285042,0,0,0,0,0,0,0,0,0,0,0,0,11285042,11285042,11285042,11285042,11285042,11285042,11285042,0,0,0,0,0,0,14643494,14643494,14643494,0,14643494,14643494,14643494,0,0,0,0,0,0,0,0,0,0,0,0,14643494,14643494,14643494,0,0,14643494,14643494,14643494,0,0,0,0,0,0,0,0,0,14643494,14643494,14643494,0,0,0,0,0,0,0,0,0,0,0,0,16511542,16511542,16511542,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16511542,16511542,16511542,0,0,0,0,0,0,0,0,0,0,0,0,16511542,16511542,16511542,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16511542,16511542,16511542,0,0,0,0,0,0,0,0,0,0,0,0,10085712,10085712,10085712,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10085712,10085712,10085712,0,0,0,0,0,0,0,0,0,0,0,0,10085712,10085712,10085712,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5992161,5992161,5992161,0,0,0,0,0,0,0,0,0,0,0,0,5992161,5992161,5992161,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3170434,3170434,3170434,0,0,0,0,0,0};
const CRGB num2[NUM_LEDS] PROGMEM = {0,0,0,0,11285042,11285042,11285042,11285042,11285042,11285042,11285042,11285042,11285042,0,0,0,0,0,0,11285042,11285042,11285042,11285042,11285042,11285042,11285042,11285042,11285042,0,0,0,0,0,0,0,0,11285042,11285042,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14643494,14643494,0,0,0,0,0,0,0,0,14643494,14643494,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14643494,14643494,0,0,0,0,0,0,0,0,16511542,16511542,0,0,0,0,0,0,0,0,0,0,0,0,0,16511542,16511542,16511542,16511542,16511542,16511542,16511542,16511542,16511542,0,0,0,0,0,0,0,0,16511542,16511542,16511542,16511542,16511542,16511542,16511542,16511542,16511542,0,0,0,0,0,0,16511542,16511542,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10085712,10085712,0,0,0,0,0,0,10085712,10085712,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10085712,10085712,0,0,0,0,0,0,5992161,5992161,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5992161,5992161,5992161,5992161,5992161,5992161,5992161,5992161,5992161,0,0,0,0,0,0,3170434,3170434,3170434,3170434,3170434,3170434,3170434,3170434,3170434,0,0,0,0};
const CRGB num3[NUM_LEDS] PROGMEM = {0,0,0,0,11285042,11285042,11285042,11285042,11285042,11285042,11285042,11285042,11285042,0,0,0,0,0,0,11285042,11285042,11285042,11285042,11285042,11285042,11285042,11285042,11285042,0,0,0,0,0,0,0,0,11285042,11285042,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14643494,14643494,0,0,0,0,0,0,0,0,14643494,14643494,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14643494,14643494,0,0,0,0,0,0,0,0,16511542,16511542,0,0,0,0,0,0,0,0,0,0,0,0,0,16511542,16511542,16511542,16511542,16511542,16511542,16511542,16511542,16511542,0,0,0,0,0,0,0,0,16511542,16511542,16511542,16511542,16511542,16511542,16511542,16511542,16511542,0,0,0,0,0,0,0,0,0,0,0,0,0,16511542,16511542,0,0,0,0,0,0,0,0,6995504,6995504,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6995504,6995504,0,0,0,0,0,0,0,0,6995504,6995504,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5992161,5992161,0,0,0,0,0,0,0,0,5992161,5992161,5992161,5992161,5992161,5992161,5992161,5992161,5992161,0,0,0,0,0,0,3170434,3170434,3170434,3170434,3170434,3170434,3170434,3170434,3170434,0,0,0,0};

const CRGB leds[NUM_LEDS] PROGMEM = {};

const CRGB cat[NUM_LEDS] PROGMEM = {16777215,16777215,0,0,0,0,0,0,0,0,0,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,0,16777215,16777215,0,16777215,16777215,0,16777215,0,16777215,16777215,16777215,16777215,0,13069358,0,13069358,13069358,0,13069358,13069358,0,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,0,13069358,13069358,13069358,13069358,13069358,13069358,13069358,0,16777215,16777215,16777215,16777215,0,13069358,13069358,13069358,13069358,10767377,13069358,10767377,0,0,0,16777215,16777215,16777215,16777215,16777215,0,13069358,13069358,0,13069358,10767377,13069358,10767377,13069358,13069358,13069358,0,16777215,16777215,16777215,16777215,0,13069358,10767377,10767377,13069358,10767377,13069358,10767377,0,0,13069358,10767377,0,16777215,16777215,0,13069358,0,16777215,16777215,0,13069358,13069358,10767377,10767377,10767377,10767377,0,16777215,16777215,16777215,0,16777215,16777215,16777215,16777215,13069358,0,0,16777215,16777215,16777215,0,10767377,0,16777215,16777215,0,13069358,0,16777215,16777215,16777215,0,13069358,13069358,13069358,16777215,16777215,13069358,13069358,0,0,13069358,13069358,13069358,13069358,13069358,13069358,13069358,0,16777215,16777215,16777215,0,10767377,0,16777215,16777215,0,13069358,13069358,0,16777215,16777215,0,10767377,0,13069358,13069358,13069358,0,10767377,0,0,13069358,13069358,13069358,13069358,13069358,13069358,13069358,0,16777215,0,16777215,13069358,13069358,0,16777215,16777215,16777215,0,16777215,16777215,0,16777215,0,13069358,13069358,0,0,0,13069358,13069358,0,0,13069358,0,16777215,16777215,16777215,0,13069358,0,16777215,16777215,0,0,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,0,16777215,16777215,16777215,16777215,16777215,0,16777215};





#include "html.h"

#define STA 1 // 1 for STA, 0 - AP

const char *ap_ssid = "ROBOT";
const char *ap_password = "12345678";

#define SCREEN_ADDRESS 0x3C
Adafruit_SSD1306 display(128, 64, &Wire, -1);

const char *ssid = "ROBOT";
const char *password = "12345678";

#define DEF_PAD_DATA "%080/0a256255255255/0b000000000000000000/1a255255255255/1b000000000000000000/097/"
#define UART_TIMEOUT 500

ESP8266WebServer server(80);
WebSocketsServer webSocket = WebSocketsServer(81);

String msg = "";

bool connected = 0;
uint32_t timer = 0;

void webSocketEvent(uint8_t num, WStype_t type, uint8_t *payload, size_t length)
{
  switch (type)
  {
  case WStype_DISCONNECTED:
    connected = 0;
    // Serial.println("Disconnected");
    break;
  case WStype_CONNECTED:
  {
    connected = 1;
    IPAddress ip = webSocket.remoteIP(num);
    webSocket.sendTXT(num, "Connected");
  }
  break;
  case WStype_TEXT:
    timer = millis();
    msg = ((String)((char *)payload)).substring(1);
    if ((char)payload[0] == '1')
    {
      webSocket.sendTXT(num, "got");
    }
    break;
  case WStype_BIN:
    // Serial.println("Binary");
    break;
  }
}

void handleRoot()
{
  server.send(200, "text/html", index_html);
}
uint32_t mosfet_timer = 0;
void setup()
{
  pinMode(2, OUTPUT);
  digitalWrite(2, 0);

  FastLED.addLeds<WS2812B, DATA_PIN, GRB>(const_cast<CRGB*>(leds), NUM_LEDS);
  FastLED.setBrightness(10);//0-255
  FastLED.show();
  
  display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS);

  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(0,0);
  display.println("No connection((");
  display.display();

  #if STA

  WiFi.begin(ssid, password);

  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(0,0);
  display.println("Connecting.......");
  display.display();

  while (WiFi.status() != WL_CONNECTED)
  {
    delay(1000);
    display.clearDisplay();
    display.setCursor(0,1);
    display.print(millis());
    display.display();
  }

  #else
  
  WiFi.softAP(ap_ssid, ap_password);
  
  #endif

  webSocket.begin();
  webSocket.onEvent(webSocketEvent);
  Serial.begin(115200, SERIAL_8N1);

  Serial.println(WiFi.localIP());

  server.on("/", handleRoot);
  server.begin();

  display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS);

  display.clearDisplay();

  display.setTextSize(1);
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(0,0);
  display.println(WiFi.localIP());
  display.println((WiFi.softAPIP()));
  display.display();
  mosfet_timer = millis();

}

uint32_t send_timer = 0;

void loop()
{
  if (millis() - mosfet_timer >= 5000){
    digitalWrite(2, 1);
  }
  server.handleClient();
  webSocket.loop();

  yield();
  if (millis() - send_timer >= 50)
  {
    if (millis() - timer >= UART_TIMEOUT)
    {
      Serial.print(DEF_PAD_DATA);
      Serial.print('\r');
    }
    else
    {
      Serial.print(msg);
      Serial.print('\r');
    }
    send_timer = millis();
  }
}